<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="D:\1. Google Drive\4. GooglePlay\Testing\MultiplayerServer\Assets\BytesCrafter\USocketNet\Plugin\USocketNet.dll">
   <Modules>
    <Module Name="usocketnet.dll">
     <Namespaces>
      <Namespace Name="BytesCrafter.USocketNet">
       <Types>
        <Type Name="QueueCoder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#decoder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'QueueCoder.decoder' is a member of type 'QueueCoder', which is serializable, but is of type 'Decoder', which is not serializable. Add the NonSerializedAttribute to 'QueueCoder.decoder'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#encoder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'QueueCoder.encoder' is a member of type 'QueueCoder', which is serializable, but is of type 'Encoder', which is not serializable. Add the NonSerializedAttribute to 'QueueCoder.encoder'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#parser" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'QueueCoder.parser' is a member of type 'QueueCoder', which is serializable, but is of type 'Parser', which is not serializable. Add the NonSerializedAttribute to 'QueueCoder.parser'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Threadset" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#websocket" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'Threadset.websocket' is a member of type 'Threadset', which is serializable, but is of type 'WebSocket', which is not serializable. Add the NonSerializedAttribute to 'Threadset.websocket'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="USocketNet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RunPingThread(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client" File="USocketNet.cs" Line="741">Object 'this' can be disposed more than once in method 'USocketNet.RunPingThread(object)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 741</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SocketIO">
       <Types>
        <Type Name="SocketIOException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'SocketIOException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebSocketSharp">
       <Types>
        <Type Name="Ext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Append(System.UInt16,System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="183">Object 'buffer' can be disposed more than once in method 'Ext.Append(this ushort, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 183</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#compress(System.IO.Stream)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="89">Object 'ds' can be disposed more than once in method 'Ext.compress(this Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 89</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="89">Object 'output' can be disposed more than once in method 'Ext.compress(this Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 89</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#compressToArray(System.IO.Stream)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="97">Object 'comp' can be disposed more than once in method 'Ext.compressToArray(this Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 97</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#decompressToArray(System.IO.Stream)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="128">Object 'decomp' can be disposed more than once in method 'Ext.decompressToArray(this Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 128</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadBytes(System.IO.Stream,System.Int64,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="604">Object 'result' can be disposed more than once in method 'Ext.ReadBytes(this Stream, long, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 604</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToByteArray(System.IO.Stream)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="Ext.cs" Line="711">Object 'output' can be disposed more than once in method 'Ext.ToByteArray(this Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 711</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebSocket" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'WebSocket' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#acceptFragments(WebSocketSharp.WebSocketFrame)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocket.cs" Line="567">Object 'concatenated' can be disposed more than once in method 'WebSocket.acceptFragments(WebSocketFrame)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 567</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#send(WebSocketSharp.Opcode,System.IO.Stream)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocket.cs" Line="1154">Object 'this' can be disposed more than once in method 'WebSocket.send(Opcode, Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1154</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message Id="_tcpClient" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocket.cs" Line="2173">'WebSocket' contains field 'WebSocket._tcpClient' that is of IDisposable type: 'TcpClient'. Change the Dispose method on 'WebSocket' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocket.cs" Line="2173">Modify 'WebSocket.IDisposable.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="RenameDispose" Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocket.cs" Line="2173">Rename 'WebSocket.IDisposable.Dispose()' to 'Dispose' and ensure that it is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebSocketException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'WebSocketException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WebSocketFrame" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ToByteArray()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket" File="WebSocketFrame.cs" Line="675">Object 'buff' can be disposed more than once in method 'WebSocketFrame.ToByteArray()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 675</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebSocketSharp.Net">
       <Types>
        <Type Name="CookieException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="CookieException.cs" Line="117">Add the following security attribute to 'CookieException.GetObjectData(SerializationInfo, StreamingContext)' in order to match a LinkDemand on base method 'Exception.GetObjectData(SerializationInfo, StreamingContext)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)].</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="CookieException.cs" Line="144">Add the following security attribute to 'CookieException.ISerializable.GetObjectData(SerializationInfo, StreamingContext)' in order to match a LinkDemand on base method 'ISerializable.GetObjectData(SerializationInfo, StreamingContext)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)].</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EndPointListener" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'EndPointListener' because it creates members of the following IDisposable types: 'Socket'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HttpConnection" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'HttpConnection' because it creates members of the following IDisposable types: 'Timer', 'MemoryStream', 'ChunkedRequestStream', 'RequestStream', 'ResponseStream', 'WebSocketStream'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HttpListener" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="RenameDispose" Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpListener.cs" Line="734">Rename 'HttpListener.IDisposable.Dispose()' to 'Dispose' and ensure that it is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpListenerContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'HttpListenerContext' because it creates members of the following IDisposable types: 'HttpListenerResponse'. If 'HttpListenerContext' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HttpListenerResponse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="RenameDispose" Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpListenerResponse.cs" Line="897">Rename 'HttpListenerResponse.IDisposable.Dispose()' to 'Dispose' and ensure that it is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpUtility" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#UrlDecodeToBytesInternally(System.Byte[],System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpUtility.cs" Line="646">Object 'res' can be disposed more than once in method 'HttpUtility.UrlDecodeToBytesInternally(byte[], int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 646</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlEncodeToBytesInternally(System.Byte[],System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpUtility.cs" Line="658">Object 'res' can be disposed more than once in method 'HttpUtility.UrlEncodeToBytesInternally(byte[], int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 658</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlEncodeUnicodeToBytesInternally(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpUtility.cs" Line="669">Object 'res' can be disposed more than once in method 'HttpUtility.UrlEncodeUnicodeToBytesInternally(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 669</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlPathEncode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="HttpUtility.cs" Line="1198">Object 'res' can be disposed more than once in method 'HttpUtility.UrlPathEncode(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1198</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebHeaderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'WebHeaderCollection' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'NameValueCollection', 'NameObjectCollectionBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="WebHeaderCollection.cs" Line="550">Method 'WebHeaderCollection.WebHeaderCollection(SerializationInfo, StreamingContext)' should be modified to call its base class implementation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="WebHeaderCollection.cs" Line="1240">Method 'WebHeaderCollection.GetObjectData(SerializationInfo, StreamingContext)' should be modified to call its base class implementation.</Issue>
            </Message>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="WebHeaderCollection.cs" Line="1239">Add the following security attribute to 'WebHeaderCollection.GetObjectData(SerializationInfo, StreamingContext)' in order to match a LinkDemand on base method 'NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)].</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="D:\1. Google Drive\7. Visual Studio\Multiplayer Server\USocketNet_Client\BytesCrafter\WebSocket.Net" File="WebHeaderCollection.cs" Line="1531">Add the following security attribute to 'WebHeaderCollection.ISerializable.GetObjectData(SerializationInfo, StreamingContext)' in order to match a LinkDemand on base method 'ISerializable.GetObjectData(SerializationInfo, StreamingContext)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)].</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebSocketSharp.Net.WebSockets">
       <Types>
        <Type Name="HttpListenerWebSocketContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'HttpListenerWebSocketContext' because it creates members of the following IDisposable types: 'WebSocket'. If 'HttpListenerWebSocketContext' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TcpListenerWebSocketContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-24 13:34:43Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'TcpListenerWebSocketContext' because it creates members of the following IDisposable types: 'WebSocket'. If 'TcpListenerWebSocketContext' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236">
   <Name>Call base class methods on ISerializable types</Name>
   <Description>Derived ISerializable types must call the base class magic constructor and the base class GetObjectData method.</Description>
   <Resolution Name="Default">Method {0} should be modified to call its base class implementation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182326.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405">
   <Name>COM visible type base types should be COM visible</Name>
   <Description>COM visible types should have an object hierarchy that is uniformly COM visible.</Description>
   <Resolution Name="Default">{0} is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182202.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 741</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Resolution Name="RenameDispose">Rename {0} to 'Dispose' and ensure that it is declared as public and sealed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235">
   <Name>Mark all non-serializable fields</Name>
   <Description>All fields that cannot be serialized directly should have the NonSerializedAttribute. Types that have the SerializableAttribute should not have fields of types that do not have the SerializableAttribute unless the fields are marked with the NonSerializedAttribute.</Description>
   <Resolution Name="Default">Field {0} is a member of type {1}, which is serializable, but is of type {2}, which is not serializable. Add the NonSerializedAttribute to {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182349.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123">
   <Name>Override link demands should be identical to base</Name>
   <Description>If a virtual method has a LinkDemand, in many cases, so should any override of it, and if an override has a LinkDemand, so should the overridden virtual method. Because it is possible to call any of the overrides of a virtual method explicitly, they should all have the same LinkDemand status or, if not, should be reviewed. This also applies to LinkDemand security checks for methods that part of an interface implementation, because the caller might use an interface-typed reference to access the method.</Description>
   <Resolution Name="BaseOnly">Add the following security attribute to {0} in order to match a LinkDemand on base method {1}:  {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182305(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Resolution Name="NonBreaking">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
